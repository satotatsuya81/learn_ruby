name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  # TypeScript 品質チェックジョブ（新規追加）
  typescript_quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install JavaScript dependencies
        run: npm ci

      - name: Debug environment info
        run: |
          echo "Node version: $(node --version)"
          echo "npm version: $(npm --version)"
          echo "TypeScript version: $(npx tsc --version)"
          echo "Working directory: $(pwd)"
          echo "Current tsconfig.json content:"
          cat tsconfig.json
          echo "Files in types directory:"
          ls -la app/javascript/types/ || echo "Types directory not found"
          echo "File permissions on User.ts:"
          ls -la app/javascript/types/User.ts || echo "User.ts not found"
          echo "Contents of User.ts first 10 lines:"
          head -10 app/javascript/types/User.ts || echo "Cannot read User.ts"

      - name: Module resolution debug
        run: node debug-resolution.js

      - name: TypeScript type checking (with debug info)
        run: npm run type-check:debug

      - name: ESLint for TypeScript
        run: npx eslint app/javascript/**/*.ts --max-warnings 0

      - name: TypeScript tests
        run: npm run test:ci

      - name: Build TypeScript for production
        run: npm run build

  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install JavaScript dependencies
        run: npm ci

      - name: Scan for security vulnerabilities in npm dependencies
        run: npm audit --audit-level moderate

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest
    needs: [typescript_quality]  # TypeScript品質チェック完了後に実行

    services:
      mysql:
        image: mysql
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      # redis:
      #   image: redis
      #   ports:
      #     - 6379:6379
      #   options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

      selenium:
        image: selenium/standalone-chrome:latest
        ports:
          - 4444:4444
        options: --shm-size=2g --health-cmd="curl -f http://localhost:4444/wd/hub/status" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential default-libmysqlclient-dev git libyaml-dev pkg-config google-chrome-stable

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install JavaScript dependencies
        run: npm ci

      - name: Build assets for testing
        run: npm run build

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Run tests
        env:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          MYSQL_PASSWORD: ""
          SELENIUM_DRIVER_URL: http://127.0.0.1:4444/wd/hub
          # REDIS_URL: redis://localhost:6379/0
        run: bin/rails db:test:prepare && bundle exec rspec

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
